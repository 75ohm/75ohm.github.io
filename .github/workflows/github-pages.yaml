# Workflow for building and deploying a Hugo site to GitHub Pages
# In addition the site will be uploaded to a ftp host
name: Deploy Hugo site to GitHub Pages

on:
  push:
    branches:
      - main                # Runs on pushes targeting the default branch to deploy from
  pull_request:             # Check if the site still builds correctly when starting pull request
  workflow_dispatch:        # Allows to run this workflow manually from the Actions tab

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

env:
  HUGO_VERSION: latest

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive   # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0          # Fetch all history for .GitInfo and .Lastmod

      - name: Setup GitHub Pages and extract metadata
        id: pages
        uses: actions/configure-pages@v5

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true

      - name: Build statice site with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: hugo --minify

      - name: Upload blog as artifact
        uses: actions/upload-artifact@v4
        with:
          name: blog
          path: ./public
          if-no-files-found: error

      - name: Build statice site with Hugo for ${{ steps.pages.outputs.base_url }}
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload website as GitHub pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment jobs
  deploy-github:
    name: Deploy website to GitHub Pages
    if: github.ref == 'refs/heads/main'      # Only deploy from main branch
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-ftp:
    name: Deploy website to blog
    runs-on: ubuntu-latest
    environment:
      name: blog
      url: "https://blog.daniel-pape.de/"
    needs: build
    steps:
      - name: Download static website from artifacts
        uses: actions/download-artifact@v4
        with:
          name: blog
          path: ./public
      
      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.ftp_server }}
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
          protocol: ftp
          local-dir: ./public/
          dry-run: ${{ github.ref != 'refs/heads/main' }}    # Only deploy from main branch
